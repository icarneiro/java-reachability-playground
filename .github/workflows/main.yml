name: Example workflow for using SonarCloud, Snyk and OWASP ZAP

on:
  push:
    branches:
      - master
      - main

jobs:
  SecretsScan:
    runs-on: ubuntu-latest
    name: TruffleHog Secrets Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
  
#   SAST:
#     needs: SecretsScan
#     runs-on: ubuntu-latest
#     name: SonarCloud (SAST tool)
#     steps:
#     - uses: actions/checkout@v2
#       with:
#         # Disabling shallow clone is recommended for improving relevancy of reporting
#         fetch-depth: 0
#     - name: Set up JDK 11
#       uses: actions/setup-java@v2
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven cloud
#       run:  mvn -B verify sonar:sonar -Dsonar.projectKey=devsecops-security-champions_sonarcloud -Dsonar.organization=devsecops-security-champions -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
#   SCA:
#     needs: SAST
#     runs-on: ubuntu-latest
#     name: SYNK (SCA tool)
#     steps:
#       - uses: actions/checkout@master
#       - name: Snyk scan
#         uses: snyk/actions/maven@master
#         # continue-on-error: true
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#         with:
#           command: monitor
  
#   DAST:         
#     needs: SCA
#     runs-on: ubuntu-latest
#     name: OWASP ZAP (DAST tool)
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#         with:
#           ref: master
#       - name: ZAP Scan
#         # uses: zaproxy/action-full-scan@v0.5.1
#         uses: zaproxy/action-baseline@v0.8.2
#         continue-on-error: true
#         with:
#           command: monitor
#           token: ${{ secrets.GITHUB_TOKEN }}
#           docker_name: 'owasp/zap2docker-stable'
#           target: 'https://ginandjuice.shop/'
#           rules_file_name: '.zap/rules.tsv'
#           cmd_options: '-a'
          
#   OSSF:
#     needs: DAST
#     name: Scorecard analysis
#     runs-on: ubuntu-latest
#     permissions:
#       # Needed to upload the results to code-scanning dashboard.
#       security-events: write
#       # Needed to publish results and get a badge (see publish_results below).
#       id-token: write
#       # Uncomment the permissions below if installing in a private repository.
#       # contents: read
#       # actions: read
#     steps:
#       - name: "Checkout code"
#         uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
#         with:
#           persist-credentials: false
#       - name: "Run analysis"
#         uses: ossf/scorecard-action@e38b1902ae4f44df626f11ba0734b14fb91f8f86 # v2.1.2
#         with:
#           results_file: results.sarif
#           results_format: sarif
#           publish_results: true
#       - name: "Upload artifact"
#         uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
#         with:
#           name: SARIF file
#           path: results.sarif
#           retention-days: 5
#       - name: "Upload to code-scanning"
#         uses: github/codeql-action/upload-sarif@17573ee1cc1b9d061760f3a006fc4aac4f944fd5 # v2.2.4
#         with:
#           sarif_file: results.sarif
